"use strict";window.onload=function(){var e={popup:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},o=t.onHide,n=t.onShow,c=function(){document.body.style.cssText="position: fixed; margin-top: ".concat(-window.scrollY,"px")},i=function(e){document.body.style.cssText="position: static; margin-top: 0",window.scrollTo(0,e)};return{isShown:function(){return e.classList.contains("popup--opened")},show:function(){var t=new Promise((function(t){e.style.display="block",t()}));c(),t.then((function(){e.classList.add("popup--opened"),"function"==typeof n&&n()}))},hide:function(){var t=-parseInt(document.body.style.marginTop);e.classList.remove("popup--opened"),setTimeout((function(){e.style.display="none",i(t),"function"==typeof o&&o()}),300)}}}};Array.from(document.querySelectorAll(".js-open-popup")).map((function(t){return t.addEventListener("click",(function(t){t.preventDefault();var o=t.currentTarget.dataset.popup,n=document.querySelector('.js-popup[data-popup="'.concat(o,'"]'));e.popup(n).show()}))})),Array.from(document.querySelectorAll(".js-close-popup")).map((function(t){return t.addEventListener("click",(function(t){if(t.preventDefault(),!t.target.closest(".popup__window")||!t.currentTarget.classList.contains("js-popup")){var o=t.currentTarget.closest(".popup");e.popup(o).hide()}}))})),Array.from(document.querySelectorAll(".edges__item")).map((function(e){e.addEventListener("click",(function(e){var t=e.currentTarget;t.classList.contains("edges__item--active")?t.classList.remove("edges__item--active"):(document.querySelector(".edges__item--active")&&document.querySelector(".edges__item--active").classList.remove("edges__item--active"),t.classList.add("edges__item--active"))}))}))};
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbW1vbi5qcyJdLCJuYW1lcyI6WyJ3aW5kb3ciLCJvbmxvYWQiLCIkYXBpIiwiJHBvcHVwIiwiX3JlZiIsImFyZ3VtZW50cyIsImxlbmd0aCIsInVuZGVmaW5lZCIsIm9uSGlkZSIsIm9uU2hvdyIsImRvY3VtZW50Iiwic3R5bGUiLCJjb25jYXQiLCJzY3JvbGxZIiwiYm9keSIsImNzc1RleHQiLCJzY3JvbGxUbyIsIm9mZnNldCIsImlzU2hvd24iLCJjbGFzc0xpc3QiLCJjb250YWlucyIsInNob3ciLCJQcm9taXNlIiwicmVzb2x2ZSIsImRpc3BsYXkiLCJoaWRlT3ZlcmZsb3ciLCJhZGQiLCJwcm9taXNlIiwiaGlkZSIsInBhcnNlSW50IiwibWFyZ2luVG9wIiwicmVtb3ZlIiwiQXJyYXkiLCJmcm9tIiwicXVlcnlTZWxlY3RvckFsbCIsIm1hcCIsImVsIiwiYWRkRXZlbnRMaXN0ZW5lciIsImUiLCJwcmV2ZW50RGVmYXVsdCIsImN1cnJlbnRUYXJnZXQiLCJwb3B1cCIsInRhcmdldCIsImNsb3Nlc3QiLCIkZWwiLCJxdWVyeVNlbGVjdG9yIl0sIm1hcHBpbmdzIjoiYUFBQUEsT0FBT0MsT0FBUyxXQUVkLElBQUFDLEVBQUEsQ0FJRkEsTUFBQSxTQUFBQyxHQUFrRCxJQUFBQyxFQUFBQyxVQUFBQyxPQUFBLFFBQUFDLElBQUFGLFVBQUEsR0FBQUEsVUFBQSxHQUFBLEdBQXJDRyxFQUFxQ0osRUFBckNJLE9BQUFDLEVBQXFDTCxFQUFyQ0ssT0FBV0QsRUFBQUEsV0FBMEJFLFNBQWxCRCxLQUFrQkUsTUFBbEJGLFFBQWtCLGdDQUFBRyxRQUFBWixPQUFBYSxRQUFBLE9BRzlDSCxFQUFjQyxTQUFBQSxHQUNmRCxTQUVESSxLQUFBSCxNQUFBSSxRQUFBLGtDQUlFZixPQUFPZ0IsU0FBUyxFQUFHQyxJQUFuQmpCLE1BQUFBLENBS0FrQixRQUFTLFdBQUEsT0FBTWYsRUFBT2dCLFVBQVVDLFNBQVMsa0JBRHpDQyxLQUpBckIsV0FLQWtCLElBQUFBLEVBQVMsSUFBQUksU0FBQSxTQUFBQyxHQUFBcEIsRUFBTUEsTUFBTXFCLFFBQU4sUUFGVkQsT0FLSEUsSUFFRUYsRUFBQUEsTUFBTyxXQUNScEIsRUFIRGdCLFVBQUFPLElBQUEsaUJBS1ksbUJBQVpELEdBRUFFLFFBSUdDLEtBbkJMNUIsV0FvQkcsSUFMRGlCLEdBQUFZLFNBQUFuQixTQUFBSSxLQUFBSCxNQUFBbUIsV0FPRjNCLEVBQUFnQixVQUFBWSxPQUFBLGlCQUNBSCxZQXBCSyxXQXFCSHpCLEVBQU1jLE1BQVNPLFFBQVVkLE9BRXpCUCxFQUFPZ0IsR0FDSSxtQkFBQVgsR0FDVEwsTUFLQyxTQUNKNkIsTUFBQUMsS0FBQXZCLFNBQUF3QixpQkFBQSxtQkFBQUMsS0FBQSxTQUFBQyxHQUFBLE9BL0JJQSxFQUFQQyxpQkFBQSxTQUFBLFNBQUFDLEdBYkZBLEVBQUFDLGlCQWdERVAsSUFBTUMsRUFBS3ZCLEVBQVE4QixjQUFDTixRQUFpQk8sTUFBeUJ0QyxFQUMzRGtDLFNBQUFBLGNBQUFBLHlCQUFBQSxPQUErQkssRUFBL0JMLE9BR0RuQyxFQUFBdUMsTUFBTUMsR0FBV0YsYUFKMkNSLE1BQTlEQyxLQUFBdkIsU0FBQXdCLGlCQUFBLG9CQUFBQyxLQUFBLFNBQUFDLEdBQUEsT0FXRkosRUFBQUEsaUJBQW9CRSxTQUFBQSxTQUFBQSxHQUloQixHQUoyREksRUFBQUMsa0JBSXZERCxFQUFFSSxPQUFPQyxRQUFRLG9CQUFzQkwsRUFBRUUsY0FBY3JCLFVBQVVDLFNBQVMsWUFBYSxDQUEzRixJQUFLakIsRUFBUXdDLEVBQUFBLGNBQVFBLFFBQWxCLFVBR0R6QyxFQUFBQSxNQUFLdUMsR0FBTGIsY0FNSlEsTUFBR0MsS0FBQUEsU0FBQUEsaUJBQTBCLGlCQUFNRixLQUFBLFNBQUFDLEdBQ2pDQSxFQUFBQyxpQkFBZUcsU0FBQUEsU0FBQUEsR0FBZixJQUFNSSxFQUFNUixFQUFHSSxjQUdiSSxFQUFJekIsVUFBVVksU0FBTyx1QkFDdEJhLEVBRkR6QixVQUVPWSxPQUFBLHdCQUVIckIsU0FBU21DLGNBQWMseUJBQ3hCbkMsU0FBQW1DLGNBQUEsd0JBQUExQixVQUFBWSxPQUFBLHVCQUNEYSxFQUFBQSxVQUFJekIsSUFBVU8iLCJmaWxlIjoiY29tbW9uLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIndpbmRvdy5vbmxvYWQgPSAoKSA9PiB7XG5cbiAgLy8g0J7QsdGK0LXQutGCINCz0LvQvtCx0LDQu9GM0L3QvtCz0L4gQVBJXG5jb25zdCAkYXBpID0ge307XG5cbi8vIEFQSSDQtNC70Y8g0YDQsNCx0L7RgtGLINGBINC/0L7Qv9Cw0L/QsNC80LhcbiRhcGkucG9wdXAgPSAoJHBvcHVwLCB7IG9uSGlkZSwgb25TaG93IH0gPSB7fSkgPT4ge1xuICAvLyDQntGC0LrQu9GO0YfQsNC10YIg0LLQvtC30LzQvtC20L3QvtGB0YLRjCDRgdC60YDQvtC70LvQuNGC0Ywg0YHRgtGA0LDQvdC40YbRg1xuICBjb25zdCBoaWRlT3ZlcmZsb3cgPSAoKSA9PiB7XG4gICAgZG9jdW1lbnQuYm9keS5zdHlsZS5jc3NUZXh0ID0gYHBvc2l0aW9uOiBmaXhlZDsgbWFyZ2luLXRvcDogJHstd2luZG93LnNjcm9sbFl9cHhgO1xuICB9O1xuICBcbiAgLy8g0JLQutC70Y7Rh9Cw0LXRgiDQstC+0LfQvNC+0LbQvdC+0YHRgtGMINGB0LrRgNC+0LvQu9C40YLRjCDRgdGC0YDQsNC90LjRhtGDXG4gIGNvbnN0IHNob3dPdmVyZmxvdyA9IG9mZnNldCA9PiB7XG4gICAgZG9jdW1lbnQuYm9keS5zdHlsZS5jc3NUZXh0ID0gJ3Bvc2l0aW9uOiBzdGF0aWM7IG1hcmdpbi10b3A6IDAnO1xuICAgIFxuICAgIHdpbmRvdy5zY3JvbGxUbygwLCBvZmZzZXQpO1xuICB9O1xuICBcbiAgcmV0dXJuIHtcbiAgICAvLyDQktC+0LfQstGA0LDRidCw0LXRgiB0cnVlLCDQtdGB0LvQuCDQv9C+0L/QsNC/INC/0L7QutCw0LfRi9Cy0LDQtdGC0YHRjywg0LIg0LjQvdC+0Lwg0YHQu9GD0YfQsNC1IGZhbHNlXG4gICAgaXNTaG93bjogKCkgPT4gJHBvcHVwLmNsYXNzTGlzdC5jb250YWlucygncG9wdXAtLW9wZW5lZCcpLFxuICAgIC8vINCf0L7QutCw0LfRi9Cy0LDQtdGCINC/0L7Qv9Cw0L9cbiAgICBzaG93KCkge1xuICAgICAgY29uc3QgcHJvbWlzZSA9IG5ldyBQcm9taXNlKHJlc29sdmUgPT4ge1xuICAgICAgICAkcG9wdXAuc3R5bGUuZGlzcGxheSA9ICdibG9jayc7XG4gICAgICAgIHJlc29sdmUoKTtcbiAgICAgIH0pO1xuXG4gICAgICBoaWRlT3ZlcmZsb3coKTtcblxuICAgICAgcHJvbWlzZS50aGVuKCgpID0+IHtcbiAgICAgICAgJHBvcHVwLmNsYXNzTGlzdC5hZGQoJ3BvcHVwLS1vcGVuZWQnKTtcbiAgICAgICAgaWYgKHR5cGVvZiBvblNob3cgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICBvblNob3coKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfSxcbiAgICAvLyDQodC60YDRi9Cy0LDQtdGCINC/0L7Qv9Cw0L9cbiAgICBoaWRlKCkge1xuICAgICAgY29uc3Qgb2Zmc2V0ID0gLXBhcnNlSW50KGRvY3VtZW50LmJvZHkuc3R5bGUubWFyZ2luVG9wKTtcbiAgXG4gICAgICAkcG9wdXAuY2xhc3NMaXN0LnJlbW92ZSgncG9wdXAtLW9wZW5lZCcpO1xuICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICRwb3B1cC5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuICAgICAgICBzaG93T3ZlcmZsb3cob2Zmc2V0KTtcbiAgICAgICAgaWYgKHR5cGVvZiBvbkhpZGUgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICBvbkhpZGUoKTtcbiAgICAgICAgfVxuICAgICAgfSwgMzAwKTtcbiAgICB9XG4gIH07XG59O1xuXG4gIEFycmF5LmZyb20oZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmpzLW9wZW4tcG9wdXAnKSkubWFwKGVsID0+XG4gIGVsLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZSA9PiB7XG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuXG4gICAgY29uc3QgdGFyZ2V0ID0gZS5jdXJyZW50VGFyZ2V0LmRhdGFzZXQucG9wdXA7XG4gICAgY29uc3QgJHBvcHVwID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgLmpzLXBvcHVwW2RhdGEtcG9wdXA9XCIke3RhcmdldH1cIl1gKTtcbiAgICBcbiAgICAkYXBpLnBvcHVwKCRwb3B1cCkuc2hvdygpO1xuICB9KVxuKTtcbiAgXG5BcnJheS5mcm9tKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5qcy1jbG9zZS1wb3B1cCcpKS5tYXAoZWwgPT5cbiAgZWwuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBlID0+IHtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG5cbiAgICBpZighZS50YXJnZXQuY2xvc2VzdCgnLnBvcHVwX193aW5kb3cnKSB8fCAhZS5jdXJyZW50VGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucygnanMtcG9wdXAnKSkge1xuICAgICAgY29uc3QgJHBvcHVwID0gZS5jdXJyZW50VGFyZ2V0LmNsb3Nlc3QoJy5wb3B1cCcpO1xuXG4gICAgICAkYXBpLnBvcHVwKCRwb3B1cCkuaGlkZSgpO1xuICAgIH1cbiAgfSlcbik7XG5cbiAgQXJyYXkuZnJvbShkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuZWRnZXNfX2l0ZW0nKSkubWFwKGVsID0+IHtcbiAgZWwuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBlbCA9PiB7XG4gICAgY29uc3QgJGVsID0gZWwuY3VycmVudFRhcmdldDtcblxuICAgIGlmICgkZWwuY2xhc3NMaXN0LmNvbnRhaW5zKCdlZGdlc19faXRlbS0tYWN0aXZlJykpIHtcbiAgICAgICRlbC5jbGFzc0xpc3QucmVtb3ZlKCdlZGdlc19faXRlbS0tYWN0aXZlJyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmIChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuZWRnZXNfX2l0ZW0tLWFjdGl2ZScpKSB7XG4gICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5lZGdlc19faXRlbS0tYWN0aXZlJykuY2xhc3NMaXN0LnJlbW92ZSgnZWRnZXNfX2l0ZW0tLWFjdGl2ZScpO1xuICAgICAgfVxuICAgICAgJGVsLmNsYXNzTGlzdC5hZGQoJ2VkZ2VzX19pdGVtLS1hY3RpdmUnKTtcbiAgICB9XG4gIH0pO1xufSk7XG5cbn0iXX0=
